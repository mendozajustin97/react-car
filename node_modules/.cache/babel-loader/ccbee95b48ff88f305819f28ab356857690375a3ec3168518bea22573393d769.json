{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\croba\\\\OneDrive\\\\Documents\\\\React\\\\Cars\\\\cars\\\\src\\\\components\\\\TaskList.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TaskList(_ref) {\n  let {\n    tasks,\n    onChangeTask,\n    onDeleteTask\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Task, {\n        task: task,\n        onChange: onChangeTask,\n        onDelete: onDeleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this)\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = TaskList;\nfunction Task(_ref2) {\n  _s();\n  let {\n    task,\n    onChange,\n    onDelete\n  } = _ref2;\n  const [isEditing, setIsEditing] = useState(false);\n  let taskContent;\n  if (isEditing) {\n    taskContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: task.text,\n        onChange: e => {\n          onChange({\n            ...task,\n            text: e.target.value\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(false),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    taskContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [task.text, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: task.done,\n      onChange: e => {\n        onChange({\n          ...task,\n          done: e.target.checked\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), taskContent, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onDelete(task.id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Task, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n_c2 = Task;\nvar _c, _c2;\n$RefreshReg$(_c, \"TaskList\");\n$RefreshReg$(_c2, \"Task\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskList","_ref","tasks","onChangeTask","onDeleteTask","children","map","task","Task","onChange","onDelete","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","_ref2","_s","isEditing","setIsEditing","taskContent","value","text","e","target","onClick","type","checked","done","_c2","$RefreshReg$"],"sources":["C:/Users/croba/OneDrive/Documents/React/Cars/cars/src/components/TaskList.jsx"],"sourcesContent":["import { useState } from 'react';\r\n\r\nexport default function TaskList({\r\n  tasks,\r\n  onChangeTask,\r\n  onDeleteTask\r\n}) {\r\n  return (\r\n    <ul>\r\n      {tasks.map(task => (\r\n        <li key={task.id}>\r\n          <Task\r\n            task={task}\r\n            onChange={onChangeTask}\r\n            onDelete={onDeleteTask}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction Task({ task, onChange, onDelete }) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  let taskContent;\r\n  if (isEditing) {\r\n    taskContent = (\r\n      <>\r\n        <input\r\n          value={task.text}\r\n          onChange={e => {\r\n            onChange({\r\n              ...task,\r\n              text: e.target.value\r\n            });\r\n          }} />\r\n        <button onClick={() => setIsEditing(false)}>\r\n          Save\r\n        </button>\r\n      </>\r\n    );\r\n  } else {\r\n    taskContent = (\r\n      <>\r\n        {task.text}\r\n        <button onClick={() => setIsEditing(true)}>\r\n          Edit\r\n        </button>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <label>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={task.done}\r\n        onChange={e => {\r\n          onChange({\r\n            ...task,\r\n            done: e.target.checked\r\n          });\r\n        }}\r\n      />\r\n      {taskContent}\r\n      <button onClick={() => onDelete(task.id)}>\r\n        Delete\r\n      </button>\r\n    </label>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}